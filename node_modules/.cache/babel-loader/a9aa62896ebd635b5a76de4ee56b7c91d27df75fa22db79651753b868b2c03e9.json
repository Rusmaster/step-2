{"ast":null,"code":"var _jsxFileName = \"C:\\\\YandexPracticum\\\\step-2 \\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F (3) \\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F\\\\src\\\\index.tsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\"; // Импортируем createStore из redux\nimport rootReducer from \"./services/reducers/rootReducer\";\n\n// Создаем стор, используя createStore и передаем ему rootReducer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(rootReducer);\n\n// Типизация для TypeScript (если используется)\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","Provider","createStore","rootReducer","jsxDEV","_jsxDEV","store","root","createRoot","document","getElementById","render","children","StrictMode","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/YandexPracticum/step-2 — копия (3) — копия/src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\"; // Импортируем createStore из redux\nimport rootReducer from \"./services/reducers/rootReducer\";\n\n// Создаем стор, используя createStore и передаем ему rootReducer\nconst store = createStore(rootReducer);\n\n// Типизация для TypeScript (если используется)\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\n\nroot.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,sBAAsB;AACtC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,QAAQ,OAAO,CAAC,CAAC;AACrC,OAAOC,WAAW,MAAM,iCAAiC;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGJ,WAAW,CAACC,WAAW,CAAC;;AAEtC;;AAIA,MAAMI,IAAI,GAAGR,QAAQ,CAACS,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AAEDH,IAAI,CAACI,MAAM,eACTN,OAAA,CAACJ,QAAQ;EAACK,KAAK,EAAEA,KAAM;EAAAM,QAAA,eACrBP,OAAA,CAACP,KAAK,CAACe,UAAU;IAAAD,QAAA,eACfP,OAAA,CAACL,GAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACX,CACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}