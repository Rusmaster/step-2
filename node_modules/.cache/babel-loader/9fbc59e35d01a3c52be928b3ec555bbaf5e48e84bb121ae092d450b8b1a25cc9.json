{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../constants\";\nconst initialState = {\n  isLoading: false,\n  hasError: false,\n  errorMessage: null,\n  data: []\n};\nexport const fetchIngredients = createAsyncThunk(\"ingredients/fetchIngredients\", async () => {\n  const response = await fetch(`${BASE_URL}/ingredients`);\n  const data = await response.json();\n  return data.data;\n});\nconst ingredientsSlice = createSlice({\n  name: \"ingredients\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchIngredients.pending, state => {\n      state.isLoading = true;\n      state.hasError = false;\n      state.errorMessage = null;\n    }).addCase(fetchIngredients.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.data = action.payload;\n    }).addCase(fetchIngredients.rejected, (state, action) => {\n      state.isLoading = false;\n      state.hasError = true;\n      state.errorMessage = action.payload;\n    });\n  }\n});\nexport default ingredientsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","BASE_URL","initialState","isLoading","hasError","errorMessage","data","fetchIngredients","response","fetch","json","ingredientsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/YandexPracticum/step-2 — копия (3) — копия/src/services/reducers/ingredientsSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { Product } from \"./../../types/Product\";\r\nimport { BASE_URL } from \"../constants\";\r\nimport { fetchProducts } from \"../actions/productActions\";\r\n\r\nexport interface IngredientsState {\r\n  isLoading: boolean;\r\n  hasError: boolean;\r\n  errorMessage: string | null;\r\n  data: Product[];\r\n}\r\n\r\nconst initialState: IngredientsState = {\r\n  isLoading: false,\r\n  hasError: false,\r\n  errorMessage: null,\r\n  data: [],\r\n};\r\n\r\nexport const fetchIngredients = createAsyncThunk(\r\n  \"ingredients/fetchIngredients\",\r\n  async () => {\r\n    const response = await fetch(`${BASE_URL}/ingredients`);\r\n    const data = await response.json();\r\n    return data.data;\r\n  }\r\n);\r\n\r\nconst ingredientsSlice = createSlice({\r\n  name: \"ingredients\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchIngredients.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.hasError = false;\r\n        state.errorMessage = null;\r\n      })\r\n      .addCase(fetchIngredients.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.data = action.payload;\r\n      })\r\n      .addCase(fetchIngredients.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.hasError = true;\r\n        state.errorMessage = action.payload as string;\r\n      });\r\n  },\r\n});\r\n\r\nexport default ingredientsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,SAASC,QAAQ,QAAQ,cAAc;AAUvC,MAAMC,YAA8B,GAAG;EACrCC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE,KAAK;EACfC,YAAY,EAAE,IAAI;EAClBC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGP,gBAAgB,CAC9C,8BAA8B,EAC9B,YAAY;EACV,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,QAAQ,cAAc,CAAC;EACvD,MAAMK,IAAI,GAAG,MAAME,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClC,OAAOJ,IAAI,CAACA,IAAI;AAClB,CACF,CAAC;AAED,MAAMK,gBAAgB,GAAGZ,WAAW,CAAC;EACnCa,IAAI,EAAE,aAAa;EACnBV,YAAY;EACZW,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACT,gBAAgB,CAACU,OAAO,EAAGC,KAAK,IAAK;MAC5CA,KAAK,CAACf,SAAS,GAAG,IAAI;MACtBe,KAAK,CAACd,QAAQ,GAAG,KAAK;MACtBc,KAAK,CAACb,YAAY,GAAG,IAAI;IAC3B,CAAC,CAAC,CACDW,OAAO,CAACT,gBAAgB,CAACY,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACf,SAAS,GAAG,KAAK;MACvBe,KAAK,CAACZ,IAAI,GAAGc,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACT,gBAAgB,CAACe,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACf,SAAS,GAAG,KAAK;MACvBe,KAAK,CAACd,QAAQ,GAAG,IAAI;MACrBc,KAAK,CAACb,YAAY,GAAGe,MAAM,CAACC,OAAiB;IAC/C,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeV,gBAAgB,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}