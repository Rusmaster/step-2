{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  selectedIngredients: [],\n  totalPrice: 0,\n  orderId: null,\n  isLoading: false,\n  hasError: false\n};\n\n// Асинхронный экшен для оформления заказа\nexport const placeOrder = createAsyncThunk(\"burgerConstructor/placeOrder\", async (_, thunkAPI) => {\n  try {\n    const response = await fetch(\"https://norma.nomoreparties.space/api/ingredients\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ingredients: thunkAPI.getState().burgerConstructor.selectedIngredients\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to place order\");\n    }\n    const data = await response.json();\n    return data.orderId;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nconst calculateTotalPrice = ingredients => {\n  return ingredients.reduce((acc, ingredient) => acc + ingredient.price, 0);\n};\nconst burgerConstructorSlice = createSlice({\n  name: \"burgerConstructor\",\n  initialState,\n  reducers: {\n    addIngredient(state, action) {\n      const ingredient = action.payload;\n      if (ingredient.type === \"bun\" && state.selectedIngredients.some(i => i.type === \"bun\")) {\n        return;\n      }\n      state.selectedIngredients.push(ingredient);\n      state.totalPrice = calculateTotalPrice(state.selectedIngredients);\n    },\n    removeIngredient(state, action) {\n      state.selectedIngredients.splice(action.payload, 1);\n      state.totalPrice = calculateTotalPrice(state.selectedIngredients);\n    },\n    moveIngredient(state, action) {\n      const {\n        dragIndex,\n        hoverIndex\n      } = action.payload;\n      const draggedIngredient = state.selectedIngredients[dragIndex];\n      state.selectedIngredients.splice(dragIndex, 1);\n      state.selectedIngredients.splice(hoverIndex, 0, draggedIngredient);\n      state.totalPrice = calculateTotalPrice(state.selectedIngredients);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(placeOrder.pending, state => {\n      state.isLoading = true;\n      state.hasError = false;\n    }).addCase(placeOrder.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.orderId = action.payload;\n      state.selectedIngredients = [];\n      state.totalPrice = 0;\n    }).addCase(placeOrder.rejected, state => {\n      state.isLoading = false;\n      state.hasError = true;\n    });\n  }\n});\nexport const {\n  addIngredient,\n  removeIngredient,\n  moveIngredient\n} = burgerConstructorSlice.actions;\nexport default burgerConstructorSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","selectedIngredients","totalPrice","orderId","isLoading","hasError","placeOrder","_","thunkAPI","response","fetch","method","headers","body","JSON","stringify","ingredients","getState","burgerConstructor","ok","Error","data","json","error","rejectWithValue","message","calculateTotalPrice","reduce","acc","ingredient","price","burgerConstructorSlice","name","reducers","addIngredient","state","action","payload","type","some","i","push","removeIngredient","splice","moveIngredient","dragIndex","hoverIndex","draggedIngredient","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/YandexPracticum/step-2-redux — копия (2)/src/components/BurgerContent/BurgerIngredients/services/burgerConstructorSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { Product } from \"../types\";\r\n\r\ninterface BurgerConstructorState {\r\n  selectedIngredients: Product[];\r\n  totalPrice: number;\r\n  orderId: string | null;\r\n  isLoading: boolean;\r\n  hasError: boolean;\r\n}\r\n\r\nconst initialState: BurgerConstructorState = {\r\n  selectedIngredients: [],\r\n  totalPrice: 0,\r\n  orderId: null,\r\n  isLoading: false,\r\n  hasError: false,\r\n};\r\n\r\n// Асинхронный экшен для оформления заказа\r\nexport const placeOrder = createAsyncThunk<\r\n  string,\r\n  void,\r\n  { state: { burgerConstructor: BurgerConstructorState } }\r\n>(\"burgerConstructor/placeOrder\", async (_, thunkAPI) => {\r\n  try {\r\n    const response = await fetch(\r\n      \"https://norma.nomoreparties.space/api/ingredients\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          ingredients:\r\n            thunkAPI.getState().burgerConstructor.selectedIngredients,\r\n        }),\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to place order\");\r\n    }\r\n    const data = await response.json();\r\n    return data.orderId;\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.message);\r\n  }\r\n});\r\n\r\nconst calculateTotalPrice = (ingredients: Product[]): number => {\r\n  return ingredients.reduce((acc, ingredient) => acc + ingredient.price, 0);\r\n};\r\n\r\nconst burgerConstructorSlice = createSlice({\r\n  name: \"burgerConstructor\",\r\n  initialState,\r\n  reducers: {\r\n    addIngredient(state, action: PayloadAction<Product>) {\r\n      const ingredient = action.payload;\r\n      if (\r\n        ingredient.type === \"bun\" &&\r\n        state.selectedIngredients.some((i) => i.type === \"bun\")\r\n      ) {\r\n        return;\r\n      }\r\n      state.selectedIngredients.push(ingredient);\r\n      state.totalPrice = calculateTotalPrice(state.selectedIngredients);\r\n    },\r\n    removeIngredient(state, action: PayloadAction<number>) {\r\n      state.selectedIngredients.splice(action.payload, 1);\r\n      state.totalPrice = calculateTotalPrice(state.selectedIngredients);\r\n    },\r\n    moveIngredient(\r\n      state,\r\n      action: PayloadAction<{ dragIndex: number; hoverIndex: number }>\r\n    ) {\r\n      const { dragIndex, hoverIndex } = action.payload;\r\n      const draggedIngredient = state.selectedIngredients[dragIndex];\r\n      state.selectedIngredients.splice(dragIndex, 1);\r\n      state.selectedIngredients.splice(hoverIndex, 0, draggedIngredient);\r\n      state.totalPrice = calculateTotalPrice(state.selectedIngredients);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(placeOrder.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.hasError = false;\r\n      })\r\n      .addCase(placeOrder.fulfilled, (state, action: PayloadAction<string>) => {\r\n        state.isLoading = false;\r\n        state.orderId = action.payload;\r\n        state.selectedIngredients = [];\r\n        state.totalPrice = 0;\r\n      })\r\n      .addCase(placeOrder.rejected, (state) => {\r\n        state.isLoading = false;\r\n        state.hasError = true;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { addIngredient, removeIngredient, moveIngredient } =\r\n  burgerConstructorSlice.actions;\r\n\r\nexport default burgerConstructorSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}