{"ast":null,"code":"var _jsxFileName = \"C:\\\\YandexPracticum\\\\react-burger\\\\src\\\\components\\\\TestTwo\\\\TestTwo.tsx\";\nimport React from \"react\";\nimport products from \"../../utils/data\";\n\n// Типизация для продукта\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Функция сортировки с типизацией\nconst sortProductsByType = products => {\n  const order = [\"фрукты\", \"овощи\", \"мясо\"];\n  return products.slice().sort((a, b) => order.indexOf(a.type) - order.indexOf(b.type));\n};\nconst ProductListTwo = () => {\n  const sortedProducts = sortProductsByType(products);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: sortedProducts.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0422\\u0438\\u043F: \", product.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0440\\u043E\\u0442\\u0435\\u0438\\u043D: \", product.proteins]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0416\\u0438\\u0440\\u044B: \", product.fat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B: \", product.carbohydrates]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438: \", product.calories]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0426\\u0435\\u043D\\u0430: \", product.price, \" \\u0440\\u0443\\u0431.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.image,\n        alt: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, product._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = ProductListTwo;\nexport default ProductListTwo;\nvar _c;\n$RefreshReg$(_c, \"ProductListTwo\");","map":{"version":3,"names":["React","products","jsxDEV","_jsxDEV","sortProductsByType","order","slice","sort","a","b","indexOf","type","ProductListTwo","sortedProducts","children","map","product","name","fileName","_jsxFileName","lineNumber","columnNumber","proteins","fat","carbohydrates","calories","price","src","image","alt","_id","_c","$RefreshReg$"],"sources":["C:/YandexPracticum/react-burger/src/components/TestTwo/TestTwo.tsx"],"sourcesContent":["import React from \"react\";\r\nimport products from \"../../utils/data\";\r\n\r\n// Типизация для продукта\r\ninterface Product {\r\n  _id: string;\r\n  name: string;\r\n  type: string;\r\n  proteins: number;\r\n  fat: number;\r\n  carbohydrates: number;\r\n  calories: number;\r\n  price: number;\r\n  image: string;\r\n}\r\n\r\n// Функция сортировки с типизацией\r\nconst sortProductsByType = (products: Product[]): Product[] => {\r\n  const order = [\"фрукты\", \"овощи\", \"мясо\"];\r\n  return products\r\n    .slice()\r\n    .sort((a, b) => order.indexOf(a.type) - order.indexOf(b.type));\r\n};\r\n\r\nconst ProductListTwo: React.FC = () => {\r\n  const sortedProducts = sortProductsByType(products);\r\n\r\n  return (\r\n    <ul>\r\n      {sortedProducts.map((product) => (\r\n        <li key={product._id}>\r\n          <h2>{product.name}</h2>\r\n          <p>Тип: {product.type}</p>\r\n          <p>Протеин: {product.proteins}</p>\r\n          <p>Жиры: {product.fat}</p>\r\n          <p>Углеводы: {product.carbohydrates}</p>\r\n          <p>Калории: {product.calories}</p>\r\n          <p>Цена: {product.price} руб.</p>\r\n          <img src={product.image} alt={product.name} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ProductListTwo;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAaA;AACA,MAAMC,kBAAkB,GAAIH,QAAmB,IAAgB;EAC7D,MAAMI,KAAK,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC;EACzC,OAAOJ,QAAQ,CACZK,KAAK,CAAC,CAAC,CACPC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKJ,KAAK,CAACK,OAAO,CAACF,CAAC,CAACG,IAAI,CAAC,GAAGN,KAAK,CAACK,OAAO,CAACD,CAAC,CAACE,IAAI,CAAC,CAAC;AAClE,CAAC;AAED,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EACrC,MAAMC,cAAc,GAAGT,kBAAkB,CAACH,QAAQ,CAAC;EAEnD,oBACEE,OAAA;IAAAW,QAAA,EACGD,cAAc,CAACE,GAAG,CAAEC,OAAO,iBAC1Bb,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAKE,OAAO,CAACC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBlB,OAAA;QAAAW,QAAA,GAAG,sBAAK,EAACE,OAAO,CAACL,IAAI;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BlB,OAAA;QAAAW,QAAA,GAAG,8CAAS,EAACE,OAAO,CAACM,QAAQ;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClClB,OAAA;QAAAW,QAAA,GAAG,4BAAM,EAACE,OAAO,CAACO,GAAG;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BlB,OAAA;QAAAW,QAAA,GAAG,oDAAU,EAACE,OAAO,CAACQ,aAAa;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxClB,OAAA;QAAAW,QAAA,GAAG,8CAAS,EAACE,OAAO,CAACS,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClClB,OAAA;QAAAW,QAAA,GAAG,4BAAM,EAACE,OAAO,CAACU,KAAK,EAAC,sBAAK;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACjClB,OAAA;QAAKwB,GAAG,EAAEX,OAAO,CAACY,KAAM;QAACC,GAAG,EAAEb,OAAO,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GARvCL,OAAO,CAACc,GAAG;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAShB,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACU,EAAA,GAnBInB,cAAwB;AAqB9B,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}