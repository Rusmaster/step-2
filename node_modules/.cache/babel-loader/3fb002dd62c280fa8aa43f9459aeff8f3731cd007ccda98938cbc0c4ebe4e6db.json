{"ast":null,"code":"var _jsxFileName = \"C:\\\\YandexPracticum\\\\react-burger\\\\src\\\\components\\\\TestTwo\\\\TestTwo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport products from \"../../utils/data\";\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\n// Типизация для продукта\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Функция сортировки с типизацией\nconst sortProductsByType = products => {\n  const order = [\"bun\", \"sauce\", \"main\"];\n  return products.slice().sort((a, b) => order.indexOf(a.type) - order.indexOf(b.type));\n};\nconst ProductListTwo = () => {\n  _s();\n  const sortedProducts = sortProductsByType(products);\n  const [current, setCurrent] = React.useState(\"bun\");\n\n  // Создаем рефы для каждого раздела\n  const bunRef = useRef(null);\n  const sauceRef = useRef(null);\n  const mainRef = useRef(null);\n\n  // Функция для прокрутки к нужному разделу\n  const handleTabClick = value => {\n    var _bunRef$current, _sauceRef$current, _mainRef$current;\n    setCurrent(value);\n    switch (value) {\n      case \"bun\":\n        (_bunRef$current = bunRef.current) === null || _bunRef$current === void 0 ? void 0 : _bunRef$current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n        break;\n      case \"sauce\":\n        (_sauceRef$current = sauceRef.current) === null || _sauceRef$current === void 0 ? void 0 : _sauceRef$current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n        break;\n      case \"main\":\n        (_mainRef$current = mainRef.current) === null || _mainRef$current === void 0 ? void 0 : _mainRef$current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        value: \"bun\",\n        active: current === \"bun\",\n        onClick: () => handleTabClick(\"bun\"),\n        children: \"\\u0411\\u0443\\u043B\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        value: \"sauce\",\n        active: current === \"sauce\",\n        onClick: () => handleTabClick(\"sauce\"),\n        children: \"\\u0421\\u043E\\u0443\\u0441\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        value: \"main\",\n        active: current === \"main\",\n        onClick: () => handleTabClick(\"main\"),\n        children: \"\\u041D\\u0430\\u0447\\u0438\\u043D\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: bunRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0411\\u0443\\u043B\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sortedProducts.filter(product => product.type === \"bun\").map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0422\\u0438\\u043F: \", product.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041F\\u0440\\u043E\\u0442\\u0435\\u0438\\u043D: \", product.proteins]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0416\\u0438\\u0440\\u044B: \", product.fat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B: \", product.carbohydrates]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438: \", product.calories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0426\\u0435\\u043D\\u0430: \", product.price, \" \\u0440\\u0443\\u0431.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: product.image,\n              alt: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: sauceRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0421\\u043E\\u0443\\u0441\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sortedProducts.filter(product => product.type === \"sauce\").map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0422\\u0438\\u043F: \", product.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041F\\u0440\\u043E\\u0442\\u0435\\u0438\\u043D: \", product.proteins]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0416\\u0438\\u0440\\u044B: \", product.fat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B: \", product.carbohydrates]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438: \", product.calories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0426\\u0435\\u043D\\u0430: \", product.price, \" \\u0440\\u0443\\u0431.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: product.image,\n              alt: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mainRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041D\\u0430\\u0447\\u0438\\u043D\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sortedProducts.filter(product => product.type === \"main\").map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0422\\u0438\\u043F: \", product.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041F\\u0440\\u043E\\u0442\\u0435\\u0438\\u043D: \", product.proteins]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0416\\u0438\\u0440\\u044B: \", product.fat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0423\\u0433\\u043B\\u0435\\u0432\\u043E\\u0434\\u044B: \", product.carbohydrates]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0438: \", product.calories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0426\\u0435\\u043D\\u0430: \", product.price, \" \\u0440\\u0443\\u0431.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: product.image,\n              alt: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ProductListTwo, \"9AqhSK1zDUAHDIa9DQxQ6hhY12c=\");\n_c = ProductListTwo;\nexport default ProductListTwo;\nvar _c;\n$RefreshReg$(_c, \"ProductListTwo\");","map":{"version":3,"names":["React","useRef","products","Tab","jsxDEV","_jsxDEV","Fragment","_Fragment","sortProductsByType","order","slice","sort","a","b","indexOf","type","ProductListTwo","_s","sortedProducts","current","setCurrent","useState","bunRef","sauceRef","mainRef","handleTabClick","value","_bunRef$current","_sauceRef$current","_mainRef$current","scrollIntoView","behavior","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","active","onClick","ref","filter","product","map","name","proteins","fat","carbohydrates","calories","price","src","image","alt","_id","_c","$RefreshReg$"],"sources":["C:/YandexPracticum/react-burger/src/components/TestTwo/TestTwo.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport products from \"../../utils/data\";\r\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// Типизация для продукта\r\ninterface Product {\r\n  _id: string;\r\n  name: string;\r\n  type: string;\r\n  proteins: number;\r\n  fat: number;\r\n  carbohydrates: number;\r\n  calories: number;\r\n  price: number;\r\n  image: string;\r\n}\r\n\r\n// Функция сортировки с типизацией\r\nconst sortProductsByType = (products: Product[]): Product[] => {\r\n  const order = [\"bun\", \"sauce\", \"main\"];\r\n  return products\r\n    .slice()\r\n    .sort((a, b) => order.indexOf(a.type) - order.indexOf(b.type));\r\n};\r\n\r\nconst ProductListTwo: React.FC = () => {\r\n  const sortedProducts = sortProductsByType(products);\r\n  const [current, setCurrent] = React.useState(\"bun\");\r\n\r\n  // Создаем рефы для каждого раздела\r\n  const bunRef = useRef<HTMLDivElement>(null);\r\n  const sauceRef = useRef<HTMLDivElement>(null);\r\n  const mainRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Функция для прокрутки к нужному разделу\r\n  const handleTabClick = (value: string) => {\r\n    setCurrent(value);\r\n    switch (value) {\r\n      case \"bun\":\r\n        bunRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n        break;\r\n      case \"sauce\":\r\n        sauceRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n        break;\r\n      case \"main\":\r\n        mainRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Список продуктов</h1>\r\n\r\n      <div style={{ display: \"flex\" }}>\r\n        <Tab\r\n          value=\"bun\"\r\n          active={current === \"bun\"}\r\n          onClick={() => handleTabClick(\"bun\")}\r\n        >\r\n          Булки\r\n        </Tab>\r\n        <Tab\r\n          value=\"sauce\"\r\n          active={current === \"sauce\"}\r\n          onClick={() => handleTabClick(\"sauce\")}\r\n        >\r\n          Соусы\r\n        </Tab>\r\n        <Tab\r\n          value=\"main\"\r\n          active={current === \"main\"}\r\n          onClick={() => handleTabClick(\"main\")}\r\n        >\r\n          Начинки\r\n        </Tab>\r\n      </div>\r\n\r\n      <div>\r\n        <div ref={bunRef}>\r\n          <h2>Булки</h2>\r\n          <ul>\r\n            {sortedProducts\r\n              .filter((product) => product.type === \"bun\")\r\n              .map((product) => (\r\n                <li key={product._id}>\r\n                  <h3>{product.name}</h3>\r\n                  <p>Тип: {product.type}</p>\r\n                  <p>Протеин: {product.proteins}</p>\r\n                  <p>Жиры: {product.fat}</p>\r\n                  <p>Углеводы: {product.carbohydrates}</p>\r\n                  <p>Калории: {product.calories}</p>\r\n                  <p>Цена: {product.price} руб.</p>\r\n                  <img src={product.image} alt={product.name} />\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n        <div ref={sauceRef}>\r\n          <h2>Соусы</h2>\r\n          <ul>\r\n            {sortedProducts\r\n              .filter((product) => product.type === \"sauce\")\r\n              .map((product) => (\r\n                <li key={product._id}>\r\n                  <h3>{product.name}</h3>\r\n                  <p>Тип: {product.type}</p>\r\n                  <p>Протеин: {product.proteins}</p>\r\n                  <p>Жиры: {product.fat}</p>\r\n                  <p>Углеводы: {product.carbohydrates}</p>\r\n                  <p>Калории: {product.calories}</p>\r\n                  <p>Цена: {product.price} руб.</p>\r\n                  <img src={product.image} alt={product.name} />\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n        <div ref={mainRef}>\r\n          <h2>Начинки</h2>\r\n          <ul>\r\n            {sortedProducts\r\n              .filter((product) => product.type === \"main\")\r\n              .map((product) => (\r\n                <li key={product._id}>\r\n                  <h3>{product.name}</h3>\r\n                  <p>Тип: {product.type}</p>\r\n                  <p>Протеин: {product.proteins}</p>\r\n                  <p>Жиры: {product.fat}</p>\r\n                  <p>Углеводы: {product.carbohydrates}</p>\r\n                  <p>Калории: {product.calories}</p>\r\n                  <p>Цена: {product.price} руб.</p>\r\n                  <img src={product.image} alt={product.name} />\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListTwo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}