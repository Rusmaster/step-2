{"ast":null,"code":"var _jsxFileName = \"C:\\\\YandexPracticum\\\\react-burger\\\\src\\\\utils\\\\modal-test\\\\modal-test.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Alert, Modal, StyleSheet, Text, Pressable, View } from \"react-native\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalTest = () => {\n  _s();\n  const [modalVisible, setModalVisible] = useState(false);\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.centeredView,\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: () => {\n        Alert.alert(\"Modal has been closed.\");\n        setModalVisible(!modalVisible);\n      },\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: styles.centeredView,\n        children: /*#__PURE__*/_jsxDEV(View, {\n          style: styles.modalView,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.modalText,\n            children: \"Hello World!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pressable, {\n            style: [styles.button, styles.buttonClose],\n            onPress: () => setModalVisible(!modalVisible),\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              style: styles.textStyle,\n              children: \"Hide Modal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pressable, {\n      style: [styles.button, styles.buttonOpen],\n      onPress: () => setModalVisible(true),\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.textStyle,\n        children: \"Show Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalTest, \"eUChne/lYvkrgB29ku5PUEOQqyk=\");\n_c = ModalTest;\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default ModalTest;\nvar _c;\n$RefreshReg$(_c, \"ModalTest\");","map":{"version":3,"names":["React","useState","Alert","Modal","StyleSheet","Text","Pressable","View","jsxDEV","_jsxDEV","ModalTest","_s","modalVisible","setModalVisible","style","styles","centeredView","children","animationType","transparent","visible","onRequestClose","alert","modalView","modalText","fileName","_jsxFileName","lineNumber","columnNumber","button","buttonClose","onPress","textStyle","buttonOpen","_c","create","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","marginBottom","$RefreshReg$"],"sources":["C:/YandexPracticum/react-burger/src/utils/modal-test/modal-test.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Alert, Modal, StyleSheet, Text, Pressable, View } from \"react-native\";\r\n\r\nconst ModalTest = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  return (\r\n    <View style={styles.centeredView}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert(\"Modal has been closed.\");\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalText}>Hello World!</Text>\r\n            <Pressable\r\n              style={[styles.button, styles.buttonClose]}\r\n              onPress={() => setModalVisible(!modalVisible)}\r\n            >\r\n              <Text style={styles.textStyle}>Hide Modal</Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      <Pressable\r\n        style={[styles.button, styles.buttonOpen]}\r\n        onPress={() => setModalVisible(true)}\r\n      >\r\n        <Text style={styles.textStyle}>Show Modal</Text>\r\n      </Pressable>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default ModalTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}